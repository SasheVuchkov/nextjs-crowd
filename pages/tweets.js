"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
exports.__esModule = true;
exports.getServerSideProps = void 0;
var head_1 = require("next/head");
var react_bootstrap_1 = require("react-bootstrap");
var Banner_1 = require("../components/stats/Banner");
var Title_1 = require("../components/common/Title");
var User_1 = require("../components/entities/User");
var Layout_1 = require("../components/common/Layout");
var tweets_1 = require("../lib/repos/tweets");
var stats_1 = require("../lib/utils/stats");
var Home = function (_a) {
    var users = _a.users, stats = _a.stats;
    return (<>
      <head_1["default"]>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app"/>
        <link rel="icon" href="/favicon.ico"/>
      </head_1["default"]>

        <Layout_1["default"] className="layout animation tweets">
            <react_bootstrap_1.Row className="gx-0">
                <react_bootstrap_1.Col lg={6} className="col-stats">
                    <Banner_1["default"] title={<Title_1["default"] prefix="Users" className="top-50 text-center">Stats</Title_1["default"]>} stats={stats.users}/>
                </react_bootstrap_1.Col>

                <react_bootstrap_1.Col lg={6} className="px-3">
                    <Title_1["default"] prefix="Top 3" className="mt-2 animated-text">Users</Title_1["default"]>
                    <p className="animated-text mb-3">Our special algorithm ranked these 3 users as the most prominent ones who mentioned the most loved React.Js framework.</p>
                    {users && users.slice(0, 3).map(function (user) { return <User_1["default"] data={user}/>; })}
                </react_bootstrap_1.Col>
            </react_bootstrap_1.Row>
            <react_bootstrap_1.Row className="gx-0">
                <react_bootstrap_1.Col lg={6} className="px-3 mt-5 mb-4 offset-3 text-center">
                    <Title_1["default"] prefix="All" className="mt-2 animated-text">Users</Title_1["default"]>
                    <p className="animated-text">Our special algorithm ranked these 3 users as the most prominent ones who mentioned the most loved React.Js framework.</p>
                </react_bootstrap_1.Col>
            </react_bootstrap_1.Row>
            <react_bootstrap_1.Row className="gx-0">
                {users && users.map(function (user) {
            return <react_bootstrap_1.Col key={user.id} lg={6} className="px-3">
                        <User_1["default"] data={user}/>
                    </react_bootstrap_1.Col>;
        })}
            </react_bootstrap_1.Row>
            <react_bootstrap_1.Row className="gx-0">
                <react_bootstrap_1.Col lg={6} className="offset-lg-3 px-3 animated-text">
                    <react_bootstrap_1.Button variant="outline-light" className="w-100">Load More</react_bootstrap_1.Button>
                </react_bootstrap_1.Col>
            </react_bootstrap_1.Row>
        </Layout_1["default"]>
    </>);
};
exports["default"] = Home;
var getServerSideProps = function () { return __awaiter(void 0, void 0, void 0, function () {
    var data, tweetStats, currentStats;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, (0, tweets_1.getRecentTweets)()];
            case 1:
                data = _a.sent();
                tweetStats = (0, stats_1.calcBatchTweetStats)(data.tweets);
                currentStats = {
                    tweets: tweetStats,
                    users: (0, stats_1.calcBatchUserStats)(data.users, tweetStats)
                };
                return [2 /*return*/, { props: { users: data.users, tweets: data.tweets, stats: currentStats } }];
        }
    });
}); };
exports.getServerSideProps = getServerSideProps;
